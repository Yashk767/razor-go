// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	bind "github.com/ethereum/go-ethereum/accounts/abi/bind"

	coretypes "github.com/ethereum/go-ethereum/core/types"

	ethclient "github.com/ethereum/go-ethereum/ethclient"

	mock "github.com/stretchr/testify/mock"

	types "razor/core/types"
)

// StakeManagerInterfaceMockery is an autogenerated mock type for the StakeManagerInterfaceMockery type
type StakeManagerInterfaceMockery struct {
	mock.Mock
}

// GetBountyLock provides a mock function with given fields: _a0, _a1, _a2
func (_m *StakeManagerInterfaceMockery) GetBountyLock(_a0 *ethclient.Client, _a1 *bind.CallOpts, _a2 uint32) (types.BountyLock, error) {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 types.BountyLock
	if rf, ok := ret.Get(0).(func(*ethclient.Client, *bind.CallOpts, uint32) types.BountyLock); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Get(0).(types.BountyLock)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ethclient.Client, *bind.CallOpts, uint32) error); ok {
		r1 = rf(_a0, _a1, _a2)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RedeemBounty provides a mock function with given fields: _a0, _a1, _a2
func (_m *StakeManagerInterfaceMockery) RedeemBounty(_a0 *ethclient.Client, _a1 *bind.TransactOpts, _a2 uint32) (*coretypes.Transaction, error) {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 *coretypes.Transaction
	if rf, ok := ret.Get(0).(func(*ethclient.Client, *bind.TransactOpts, uint32) *coretypes.Transaction); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*coretypes.Transaction)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*ethclient.Client, *bind.TransactOpts, uint32) error); ok {
		r1 = rf(_a0, _a1, _a2)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
